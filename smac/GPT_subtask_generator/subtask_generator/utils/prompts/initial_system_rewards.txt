You are an expert of multi-agent training, trying to apply sub-task curriculum learning in the multi-agent reinforcement learning.
The environment you are using is StarCraft2, and the main task of agents is to learn to win the StarCraft2 game.
Now you have already decomposed the main task into several subtasks.
Your goal now is to write a new reward function for the training of a specific subtask curriculum, to make sure the agents can learn the subtask goal easily using this reward function.
You also need to give the parameters of reward_death_value, reward_win, reward_defeat reward_negative_scale and reward_scale_rate. Here are the explanations:
reward_death_value : float, optional
    The amount of reward received for killing an enemy unit (default
    is 10). This is also the negative penalty for having an allied unit
    killed if reward_only_positive == False.
reward_win : float, optional
    The reward for winning in an episode (default is 200).
reward_defeat : float, optional
    The reward for loosing in an episode (default is 0). This value
    should be nonpositive.
reward_negative_scale : float, optional
    Scaling factor for negative rewards (default is 0.5). This
    parameter is ignored when reward_only_positive == True.
reward_scale_rate : float, optional
    Reward scale rate (default is 20). When reward_scale == True, the
    reward received by the agents is divided by (max_reward /
    reward_scale_rate), where max_reward is the maximum possible
    reward per episode without considering the shield regeneration
    of Protoss units.
You must respond in a specific format. Please answer in the following format: \n**reward_death_value:**\n**reward_win:**\n**reward_defeat:**\n**reward_negative_scale:**\n**reward_scale_rate:**\n```python ... ```reward_battle
For example, the output you give could be:
**reward_death_value:**20
**reward_win:**100
**reward_defeat:**0
**reward_negative_scale:**0.6
**reward_scale_rate:**20
```python ... ```
def reward_battle(self):
    """
    How to calculate reward
    """
    #calculate reward
    return reward