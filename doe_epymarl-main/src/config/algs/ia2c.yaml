# --- IA2C specific parameters ---

action_selector: "soft_policies"
mask_before_softmax: True

runner: "parallel"

buffer_size: 10
batch_size_run: 10
batch_size: 10

# update the target network every {} training steps
target_update_interval_or_tau: 0.01

lr: 0.0005
hidden_dim: 128

obs_agent_id: True
obs_last_action: False
obs_individual_obs: False

# use IA2C
agent_output_type: "pi_logits"
learner: "actor_critic_learner"
entropy_coef: 0.001
standardise_returns: False
standardise_rewards: True
use_rnn: True
q_nstep: 5 # 1 corresponds to normal r + gammaV
critic_type: "ac_critic"

name: "ia2c"

t_max: 1000000

use_doe: false
save_buffer: true
save_doe_cls: true

doe_classifier_cfg:
  doe_type: mlp
  load_mode: train
  save_classifier: true
  save_doe_name: save_mlp_classifier.pt
  load_doe_name: load_mlp_classifier.pt
  load_doe_buffer_path: 'GRF_SUBTASK/doe_epymarl-main/results/buffer/grf'
  mlp:
    hidden_sizes:
      - 128
    batch_size: 512
    test_fraction: 0.1
    learning_rate: 1e-2

  # 2s3z/3m
  role_ids:
    defence:  # classifier.role_list=[0,1,1,0,0]
      - 0 # agent id
    attack:
      - 2
      - 1
